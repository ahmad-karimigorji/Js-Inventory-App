(()=>{"use strict";var t={290:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=r(584),s=document.querySelector("#category-title"),a=document.querySelector("#category-description"),c=document.querySelector("#add-new-category-btn"),d=document.querySelector("#cansel-btn"),l=document.querySelector("#category-form"),i=document.querySelector("#add-new-category-toggle");e.default=new class{constructor(){c.addEventListener("click",(t=>this.addNewCategory(t))),d.addEventListener("click",(t=>this.cancelAddNewCategory(t))),i.addEventListener("click",(t=>this.categoryToggle()))}addNewCategory(t){const e=s.value.trim(),r=a.value.trim();e&&r&&(o.Storage.savedCategory({title:e,description:r}),s.value="",a.value="",this.creatCategoriesList(),this.categoryToggle())}creatCategoriesList(){const t=o.Storage.getAllCategories(),e=document.querySelector("#product-category"),r=document.querySelector("#product-category-modal");let s='<option class="bg-slate-500 text-slate-200" value="" selected>select a category</option>';t.forEach((t=>{s+=`<option class="bg-slate-500 text-slate-200" value="${t.id}">${t.title}</option>`})),e.innerHTML=s,r.innerHTML=s}cancelAddNewCategory(t){s.value="",a.value="",this.categoryToggle()}categoryToggle(){i.classList.toggle("hidden"),l.classList.toggle("hidden")}}},974:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0});const o=r(584),s=document.querySelector("#add-new-product-btn"),a=document.querySelector("#product-title"),c=document.querySelector("#product-quantity"),d=document.querySelector("#product-category"),l=document.querySelector("#search"),i=document.querySelector("#sort"),n=document.querySelector("#modal"),u=document.querySelector("#modal-back-dray"),g=document.querySelector("#update-product-modal-btn"),y=document.querySelector("#cancel-modal-btn"),p=document.querySelector("#product-title-modal"),m=document.querySelector("#product-quantity-modal"),h=document.querySelector("#product-category-modal"),v=document.querySelector("#badge"),S=document.querySelector(".product-list"),f=document.querySelector(".products-list-box");e.default=new class{constructor(){this.products=[],s.addEventListener("click",(t=>this.addNewProduct(t))),l.addEventListener("input",(t=>this.searchProducts(t))),i.addEventListener("change",(t=>this.sortProducts(t))),u.addEventListener("click",(t=>this.closeEditModal())),g.addEventListener("click",(t=>this.editProduct(t))),y.addEventListener("click",(t=>this.closeEditModal()))}addNewProduct(t){const e=a.value.trim(),r=+c.value.trim(),s=d.value;e&&r&&0!==r&&s&&(o.Storage.savedProduct({title:e,quantity:r,category:s}),a.value="",c.value="",d.value="",this.products=o.Storage.getAllProducts(),this.creatProductList())}setProducts(){this.products=o.Storage.getAllProducts()}creatProductList(){let t="";this.products.forEach((e=>{const r=o.Storage.getAllCategories().find((t=>t.id===e.category));t+=`<div class="flex justify-between">\n            <div class="">\n                <span class="text-slate-300 font-bold">${e.title}</span>\n            </div>\n            <div class="flex items-center space-x-2">\n                <span class="text-slate-400 text-xs sm:text-sm">${new Date(e.creatAt).toLocaleDateString("fa-IR")}</span>\n                <span class="text-slate-600 text-xs sm:text-sm border border-slate-600 rounded-xl px-2 py-.5">${null==r?void 0:r.title}</span>\n                <span class="bg-slate-500 text-slate-300 text-xs sm:text-sm w-5 sm:w-7 h-5 sm:h-7 flex items-center justify-center border-2 border-slate-300 rounded-full">${e.quantity}</span>\n                <button class="text-slate-400 text-xs sm:text-sm" id="delete-btn" data-product-id="${e.id}">delete</button>\n                <button class="text-slate-300 text-xs sm:text-sm" id="edit-btn" data-product-id="${e.id}">edit</button>\n            </div>\n        </div>`})),S.innerHTML=t,0===o.Storage.getAllProducts().length?f.classList.add("hidden"):f.classList.remove("hidden"),document.querySelectorAll("#delete-btn").forEach((t=>{t.addEventListener("click",(t=>this.deleteProduct(t)))})),document.querySelectorAll("#edit-btn").forEach((t=>{t.addEventListener("click",(t=>this.showEditModal(t)))})),this.setHeadingQuantityProduct()}searchProducts(t){const e=t.target.value,r=o.Storage.getAllProducts().filter((t=>t.title.toLowerCase().includes(e.toLowerCase().trim())));this.products=r,this.creatProductList()}sortProducts(t){const e=t.target.value;"newest"===e?this.products=this.products.sort(((t,e)=>new Date(t.creatAt)>new Date(e.creatAt)?-1:1)):"oldest"===e&&(this.products=this.products.sort(((t,e)=>new Date(t.creatAt)>new Date(e.creatAt)?1:-1))),this.creatProductList()}deleteProduct(t){const e=t.target.dataset.productId;o.Storage.deleteProduct(e),this.setProducts(),this.creatProductList()}showEditModal(t){const e=t.target.dataset.productId;n.classList.remove("-top-full"),n.classList.add("top-1/4"),u.classList.remove("hidden"),this.setProductEdit(e)}closeEditModal(){n.classList.remove("top-1/4"),n.classList.add("-top-full"),u.classList.add("hidden")}setProductEdit(t){g.dataset.productId=t;const e=this.products.find((e=>e.id===t));e&&(p.value=e.title,m.value=`${e.quantity}`,h.value=e.category)}editProduct(t){const e=t.target.dataset.productId,r=p.value.trim(),s=+m.value.trim(),a=h.value;r&&s&&0!==s&&a&&(o.Storage.savedProduct({id:e,title:r,quantity:s,category:a}),this.products=o.Storage.getAllProducts(),this.creatProductList(),this.closeEditModal())}setHeadingQuantityProduct(){if(this.products.length>0){v.classList.remove("hidden");const t=this.products.reduce(((t,e)=>t+e.quantity),0);v.innerText=`${t}`}else v.classList.add("hidden")}}},584:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Storage=void 0;class r{static getAllCategories(){return(JSON.parse(localStorage.getItem("category"))||[]).sort(((t,e)=>new Date(t.creatAt)>new Date(e.creatAt)?-1:1))}static savedCategory(t){const e=r.getAllCategories(),o=e.find((e=>e.id===t.id));o?(o.title=t.title,o.description=t.description,o.creatAt=(new Date).toISOString()):(t.id=`${(new Date).getTime()}`,t.creatAt=(new Date).toISOString(),e.push(t)),localStorage.setItem("category",JSON.stringify(e))}static getAllProducts(){return(JSON.parse(localStorage.getItem("product"))||[]).sort(((t,e)=>new Date(t.creatAt)>new Date(e.creatAt)?-1:1))}static savedProduct(t){const e=r.getAllProducts(),o=e.find((e=>e.id===t.id));o?(o.title=t.title,o.category=t.category,o.quantity=t.quantity,o.creatAt=(new Date).toISOString()):(t.id=`${(new Date).getTime()}`,t.creatAt=(new Date).toISOString(),e.push(t)),localStorage.setItem("product",JSON.stringify(e))}static deleteProduct(t){const e=r.getAllProducts().filter((e=>e.id!==t));localStorage.setItem("product",JSON.stringify(e))}}e.Storage=r},866:function(t,e,r){var o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const s=o(r(290)),a=o(r(974));document.addEventListener("DOMContentLoaded",(()=>{s.default,s.default.creatCategoriesList(),a.default,a.default.setProducts(),a.default.creatProductList()}))}},e={};!function r(o){var s=e[o];if(void 0!==s)return s.exports;var a=e[o]={exports:{}};return t[o].call(a.exports,a,a.exports,r),a.exports}(866)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,